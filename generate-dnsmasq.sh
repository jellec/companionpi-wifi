#!/bin/bash
# generate-dnsmasq.sh ‚Äì Create dnsmasq config for interfaces with DHCP server enabled

set -e

SETTINGS_FILE="/etc/companionpi-wifi/settings.env"
OUTPUT_FILE="/etc/dnsmasq.d/companionpi-wifi.conf"

log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] [dnsmasq-gen] $1"
}

# Load settings
if [[ ! -f "$SETTINGS_FILE" ]]; then
  log "‚ùå Settings file not found: $SETTINGS_FILE"
  exit 1
fi

source "$SETTINGS_FILE"

# Start new config file
log "üìù Generating dnsmasq configuration to $OUTPUT_FILE"
echo "# Auto-generated by generate-dnsmasq.sh on $(date)" | sudo tee "$OUTPUT_FILE" > /dev/null

add_dhcp_range() {
  local IFACE=$1
  local PREFIX=${IFACE^^}

  local ENABLED_VAR="${PREFIX}_DHCP_SERVER_ENABLED"
  local START_VAR="${PREFIX}_DHCP_RANGE_START"
  local END_VAR="${PREFIX}_DHCP_RANGE_END"
  local LEASE_VAR="${PREFIX}_DHCP_LEASE_TIME"
  local ROUTER_VAR="${PREFIX}_DHCP_ROUTER"
  local DNS_VAR="${PREFIX}_DHCP_DNS"
  local NETMASK_VAR="${PREFIX}_DHCP_NETMASK"

  if [[ "${!ENABLED_VAR}" == "true" ]]; then
    local RANGE_START=${!START_VAR}
    local RANGE_END=${!END_VAR}
    local LEASE=${!LEASE_VAR:-12h}
    local NETMASK=${!NETMASK_VAR:-255.255.255.0}
    local ROUTER=${!ROUTER_VAR}
    local DNS=${!DNS_VAR}

    if [[ -z "$RANGE_START" || -z "$RANGE_END" ]]; then
      log "‚ö†Ô∏è Skipping $IFACE ‚Äì Missing start or end range"
      return
    fi

    log "üîß Adding DHCP config for $IFACE ($RANGE_START - $RANGE_END, $LEASE)"

    {
      echo ""
      echo "# Config for $IFACE"
      echo "interface=$IFACE"
      echo "dhcp-range=$RANGE_START,$RANGE_END,$NETMASK,$LEASE"
      [[ -n "$ROUTER" ]] && echo "dhcp-option=3,$ROUTER"
      [[ -n "$DNS" ]] && echo "dhcp-option=6,$DNS"
    } | sudo tee -a "$OUTPUT_FILE" > /dev/null
  fi
}

# Gather interface prefixes
eth_ifaces=$(grep -oP '^ETH\d+_DHCP_SERVER_ENABLED' "$SETTINGS_FILE" | cut -d_ -f1 | tr '[:upper:]' '[:lower:]' | sort -u)
wlan_ifaces=$(grep -oP '^WLAN\d+_DHCP_SERVER_ENABLED' "$SETTINGS_FILE" | cut -d_ -f1 | tr '[:upper:]' '[:lower:]' | sort -u)

# Add DHCP ranges
for iface in $eth_ifaces; do
  add_dhcp_range "$iface"
done

for iface in $wlan_ifaces; do
  add_dhcp_range "$iface"
done

# Restart dnsmasq
log "üîÅ Restarting dnsmasq..."
sudo systemctl restart dnsmasq

log "‚úÖ Done. DHCP config generated at $OUTPUT_FILE"